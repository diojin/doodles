<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

  <!-- Bean Mapping -->
  <bean id="simpleBean" class="outerhaven.spring.aop.aspectj.SimpleBean">
    <constructor-arg value="Vinay" />
    <constructor-arg value="24" />
  </bean>

  <!-- Aspect Mapping -->
  <bean id="aspectLogging" class="outerhaven.spring.aop.aspectj.AspectLogger" />

  <aop:config>
    <!-- Pointct Mapping -->
    <aop:pointcut id="pointcutLog" expression="within(outerhaven.spring.aop.aspectj.SimpleBean)" />

    <!-- Advice Mapping -->
    <aop:aspect id="aopAspect" ref="aspectLogging">
      <aop:before pointcut-ref="pointcutLog" method="logEntry" />
      <aop:after pointcut-ref="pointcutLog" method="logExit" />
      <aop:after-returning pointcut-ref="pointcutLog"
        method="logExitAfterReturn" />
<!--      <aop:around pointcut-ref="pointcutLog" method="logAroundAdvice"/>-->
      <aop:after-throwing pointcut-ref="pointcutLog" method="logAfterThrowsAdvice"/>
    </aop:aspect>

  </aop:config>

</beans>